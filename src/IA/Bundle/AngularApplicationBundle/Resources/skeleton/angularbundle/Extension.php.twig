<?php

namespace {{ namespace }}\DependencyInjection;

{% block use_statements %}
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\HttpKernel\DependencyInjection\Extension;
use Symfony\Component\DependencyInjection\Loader;
{% endblock use_statements %}

/**
{% block phpdoc_class_header %}
 * This is the class that loads and manages your bundle configuration
{% endblock phpdoc_class_header %}
 *
 * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}
 */
{% block class_definition %}
class {{ bundle_basename }}Extension extends Extension
{% endblock class_definition %}
{
{% block class_body %}
    /**
     * {@inheritDoc}
     */
    public function load(array $configs, ContainerBuilder $container)
    {
        $configuration = new Configuration();
        $config = $this->processConfiguration($configuration, $configs);

        {% if format == 'yml' -%}
        $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.yml');
        {%- elseif format == 'xml' or format == 'annotation' -%}
        $loader = new Loader\XmlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.xml');
        {%- elseif format == 'php' -%}
        $loader = new Loader\PhpFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.php');
        {%- endif %}

    }
    
    /**
     * {@inheritDoc}
     */
    public function prepend(ContainerBuilder $container)
    {
        // get all bundles
        $bundles = $container->getParameter('kernel.bundles');
        // determine if IAAngularApplicationBundle is registered
        if (!isset($bundles['IAAngularApplicationBundle'])) {
            throw new Exception('{{ bundle_basename }}Bundle require IAAngularApplicationBundle.');
        }
        
        /*
         * RequireJs Config
         */
        $requirejsConfig = Yaml::parse(file_get_contents(__DIR__ . '/../Resources/config/requirejs.yml'));  
        $container->prependExtensionConfig('hearsay_require_js', $requirejsConfig);
        
        
        /*
         * Angular Config
         */
        $angularConfig = Yaml::parse(file_get_contents(__DIR__ . '/../Resources/config/routing_angular.yml'));
        $container->prependExtensionConfig( 'ia_angular_application', $angularConfig);
    }
{% endblock class_body %}
}
